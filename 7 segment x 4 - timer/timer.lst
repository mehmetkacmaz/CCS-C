CCS PCM C Compiler, Version 5.007, 61971               06-May-20 04:07

               Filename:   C:\Users\Mehmet Kaçmaz\OneDrive\Masaüstü\timer 4 segment\timer.lst

               ROM used:   197 words (2%)
                           Largest free fragment is 2048
               RAM used:   13 (4%) at main() level
                           16 (4%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   03C
0003:  NOP
.................... #include<16f877.h> 
.................... //////// Standard Header file for the PIC16F877 device //////////////// 
.................... #device PIC16F877 
0004:  BCF    0A.0
0005:  BCF    0A.1
0006:  BCF    0A.2
0007:  ADDWF  02,F
0008:  RETLW  3F
0009:  RETLW  06
000A:  RETLW  5B
000B:  RETLW  4F
000C:  RETLW  66
000D:  RETLW  6D
000E:  RETLW  7D
000F:  RETLW  07
0010:  RETLW  7F
0011:  RETLW  6F
*
0027:  MOVF   29,W
0028:  CLRF   78
0029:  SUBWF  28,W
002A:  BTFSC  03.0
002B:  GOTO   02F
002C:  MOVF   28,W
002D:  MOVWF  77
002E:  GOTO   03B
002F:  CLRF   77
0030:  MOVLW  08
0031:  MOVWF  2A
0032:  RLF    28,F
0033:  RLF    77,F
0034:  MOVF   29,W
0035:  SUBWF  77,W
0036:  BTFSC  03.0
0037:  MOVWF  77
0038:  RLF    78,F
0039:  DECFSZ 2A,F
003A:  GOTO   032
003B:  RETURN
....................  
.................... #list 
....................  
....................  
.................... #fuses XT,NOWDT,NOPUT,NOLVP,NOCPD,NOPROTECT,NODEBUG,NOBROWNOUT,NOWRT 
....................  
.................... #use delay(clock=4M) 
*
0012:  MOVLW  28
0013:  MOVWF  04
0014:  BCF    03.7
0015:  MOVF   00,W
0016:  BTFSC  03.2
0017:  GOTO   026
0018:  MOVLW  01
0019:  MOVWF  78
001A:  CLRF   77
001B:  DECFSZ 77,F
001C:  GOTO   01B
001D:  DECFSZ 78,F
001E:  GOTO   01A
001F:  MOVLW  4A
0020:  MOVWF  77
0021:  DECFSZ 77,F
0022:  GOTO   021
0023:  GOTO   024
0024:  DECFSZ 00,F
0025:  GOTO   018
0026:  RETURN
.................... #use fast_io(c) 
.................... #use fast_io(d) 
....................  
.................... const int digit[10] = {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F}; 
....................  
.................... //clock format [d,c : b,a] 
....................  
.................... int8 a=0;      //second units digit 
.................... int8 b=0;      //second tens digit 
.................... int8 c=0;      //minute units digit 
.................... int8 d=0;      //minute tens digit 
.................... int time=0; 
.................... int second=0; 
.................... int minute=0; 
....................  
.................... void main(){ 
*
003C:  CLRF   20
003D:  CLRF   21
003E:  CLRF   22
003F:  CLRF   23
0040:  CLRF   24
0041:  CLRF   25
0042:  CLRF   26
0043:  BSF    03.5
0044:  BSF    1F.0
0045:  BSF    1F.1
0046:  BSF    1F.2
0047:  BCF    1F.3
0048:  BCF    03.7
0049:  MOVLW  1F
004A:  ANDWF  03,F
....................    setup_psp(PSP_DISABLED); 
004B:  BCF    09.4
....................    setup_spi(SPI_SS_DISABLED); 
004C:  BCF    03.5
004D:  BCF    14.5
004E:  MOVLW  01
004F:  MOVWF  14
0050:  MOVLW  00
0051:  BSF    03.5
0052:  MOVWF  14
....................    setup_timer_1(T1_DISABLED); 
0053:  BCF    03.5
0054:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
0055:  MOVWF  78
0056:  MOVWF  12
0057:  MOVLW  00
0058:  BSF    03.5
0059:  MOVWF  12
....................    setup_adc_ports(NO_ANALOGS); 
005A:  BSF    1F.0
005B:  BSF    1F.1
005C:  BSF    1F.2
005D:  BCF    1F.3
....................    setup_adc(ADC_OFF); 
005E:  BCF    03.5
005F:  BCF    1F.0
....................    setup_CCP1(CCP_OFF); 
0060:  MOVLW  F0
0061:  ANDWF  17,F
....................    setup_CCP2(CCP_OFF); 
0062:  ANDWF  1D,F
....................     
....................    set_tris_c(0x00); 
0063:  MOVLW  00
0064:  BSF    03.5
0065:  MOVWF  07
....................    set_tris_d(0x00); 
0066:  MOVWF  08
....................     
....................    while(1){ 
....................        
....................       start: 
....................       for(int i=0; i<=50; i++){ 
0067:  BCF    03.5
0068:  CLRF   27
0069:  MOVF   27,W
006A:  SUBLW  32
006B:  BTFSS  03.0
006C:  GOTO   097
....................          output_d(0x00); 
006D:  CLRF   08
....................          output_c(0b00000001); 
006E:  MOVLW  01
006F:  MOVWF  07
....................          output_d(digit[a]); 
0070:  MOVF   20,W
0071:  CALL   004
0072:  MOVWF  28
0073:  MOVWF  08
....................          delay_ms(5); 
0074:  MOVLW  05
0075:  MOVWF  28
0076:  CALL   012
....................        
....................          output_d(0x00); 
0077:  CLRF   08
....................          output_c(0b00000010); 
0078:  MOVLW  02
0079:  MOVWF  07
....................          output_d(digit[b]); 
007A:  MOVF   21,W
007B:  CALL   004
007C:  MOVWF  28
007D:  MOVWF  08
....................          delay_ms(5); 
007E:  MOVLW  05
007F:  MOVWF  28
0080:  CALL   012
....................        
....................          output_d(0x00); 
0081:  CLRF   08
....................          output_c(0b00000100); 
0082:  MOVLW  04
0083:  MOVWF  07
....................          output_d(digit[c]); 
0084:  MOVF   22,W
0085:  CALL   004
0086:  MOVWF  28
0087:  MOVWF  08
....................          delay_ms(5); 
0088:  MOVLW  05
0089:  MOVWF  28
008A:  CALL   012
....................        
....................          output_d(0x00); 
008B:  CLRF   08
....................          output_c(0b00001000); 
008C:  MOVLW  08
008D:  MOVWF  07
....................          output_d(digit[d]); 
008E:  MOVF   23,W
008F:  CALL   004
0090:  MOVWF  28
0091:  MOVWF  08
....................          delay_ms(5); 
0092:  MOVLW  05
0093:  MOVWF  28
0094:  CALL   012
0095:  INCF   27,F
0096:  GOTO   069
....................       } 
....................       time++;           //time = total second  
0097:  INCF   24,F
....................       second=time%60; 
0098:  MOVF   24,W
0099:  MOVWF  28
009A:  MOVLW  3C
009B:  MOVWF  29
009C:  CALL   027
009D:  MOVF   77,W
009E:  MOVWF  25
....................       a = second%10; 
009F:  MOVF   25,W
00A0:  MOVWF  28
00A1:  MOVLW  0A
00A2:  MOVWF  29
00A3:  CALL   027
00A4:  MOVF   77,W
00A5:  MOVWF  20
....................       b = second/10; 
00A6:  MOVF   25,W
00A7:  MOVWF  28
00A8:  MOVLW  0A
00A9:  MOVWF  29
00AA:  CALL   027
00AB:  MOVF   78,W
00AC:  MOVWF  21
....................           
....................       minute=time/60; 
00AD:  MOVF   24,W
00AE:  MOVWF  28
00AF:  MOVLW  3C
00B0:  MOVWF  29
00B1:  CALL   027
00B2:  MOVF   78,W
00B3:  MOVWF  26
....................       c = minute%10; 
00B4:  MOVF   26,W
00B5:  MOVWF  28
00B6:  MOVLW  0A
00B7:  MOVWF  29
00B8:  CALL   027
00B9:  MOVF   77,W
00BA:  MOVWF  22
....................       d = minute/10; 
00BB:  MOVF   26,W
00BC:  MOVWF  28
00BD:  MOVLW  0A
00BE:  MOVWF  29
00BF:  CALL   027
00C0:  MOVF   78,W
00C1:  MOVWF  23
....................       goto start; 
00C2:  GOTO   068
00C3:  GOTO   068
....................   
....................    }   
.................... } 
00C4:  SLEEP

Configuration Fuses:
   Word  1: 3F39   XT NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
