CCS PCM C Compiler, Version 5.007, 61971               04-May-20 15:41

               Filename:   C:\Users\Mehmet Kaçmaz\OneDrive\Masaüstü\Github\CCS-C\4x4_keypad\4x4_keypad.lst

               ROM used:   243 words (3%)
                           Largest free fragment is 2048
               RAM used:   7 (2%) at main() level
                           8 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0B6
0003:  NOP
.................... #include<16f877.h> 
.................... //////// Standard Header file for the PIC16F877 device //////////////// 
.................... #device PIC16F877 
....................  
.................... #list 
....................  
....................  
.................... #fuses XT,NOWDT,NOPUT,NOLVP,NOCPD,NOPROTECT,NODEBUG,NOBROWNOUT,NOWRT 
....................  
.................... #use delay(clock=4M) 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... #use fast_io(b) 
.................... #use fast_io(d) 
....................  
.................... #byte portd=0x06 
....................  
.................... #define satir_1 pin_B3 
.................... #define satir_2 pin_B2 
.................... #define satir_3 pin_B1 
.................... #define satir_4 pin_B0 
.................... #define sutun_1 pin_B4 
.................... #define sutun_2 pin_B5 
.................... #define sutun_3 pin_B6 
.................... #define sutun_4 pin_B7 
....................  
.................... char tus=0; 
....................  
....................  
.................... char keypad(){ 
....................  
....................    output_b(0x00); 
0019:  CLRF   06
....................     
....................    output_high(satir_1); 
001A:  BSF    06.3
....................    if (input(sutun_1)){  
001B:  BTFSS  06.4
001C:  GOTO   024
....................       while(input(sutun_1)); 
001D:  BTFSC  06.4
001E:  GOTO   01D
....................       delay_ms(20); 
001F:  MOVLW  14
0020:  MOVWF  22
0021:  CALL   004
....................       tus=0x0A; 
0022:  MOVLW  0A
0023:  MOVWF  20
....................       } 
....................    if (input(sutun_2)){ 
0024:  BTFSS  06.5
0025:  GOTO   02D
....................       while(input(sutun_2)); 
0026:  BTFSC  06.5
0027:  GOTO   026
....................       delay_ms(20); 
0028:  MOVLW  14
0029:  MOVWF  22
002A:  CALL   004
....................      tus=3; 
002B:  MOVLW  03
002C:  MOVWF  20
....................       } 
....................    if (input(sutun_3)){ 
002D:  BTFSS  06.6
002E:  GOTO   036
....................       while(input(sutun_3)); 
002F:  BTFSC  06.6
0030:  GOTO   02F
....................       delay_ms(20); 
0031:  MOVLW  14
0032:  MOVWF  22
0033:  CALL   004
....................       tus=2; 
0034:  MOVLW  02
0035:  MOVWF  20
....................       } 
....................    if (input(sutun_4)){ 
0036:  BTFSS  06.7
0037:  GOTO   03F
....................       while(input(sutun_4)); 
0038:  BTFSC  06.7
0039:  GOTO   038
....................       delay_ms(20); 
003A:  MOVLW  14
003B:  MOVWF  22
003C:  CALL   004
....................       tus=1; 
003D:  MOVLW  01
003E:  MOVWF  20
....................       } 
....................    output_low(satir_1); 
003F:  BCF    06.3
....................  
....................    output_high(satir_2); 
0040:  BSF    06.2
....................    if (input(sutun_1)){ 
0041:  BTFSS  06.4
0042:  GOTO   04A
....................       while(input(sutun_1)); 
0043:  BTFSC  06.4
0044:  GOTO   043
....................       delay_ms(20); 
0045:  MOVLW  14
0046:  MOVWF  22
0047:  CALL   004
....................       tus=0X0B;  
0048:  MOVLW  0B
0049:  MOVWF  20
....................       } 
....................    if (input(sutun_2)){  
004A:  BTFSS  06.5
004B:  GOTO   053
....................       while(input(sutun_2)); 
004C:  BTFSC  06.5
004D:  GOTO   04C
....................       delay_ms(20); 
004E:  MOVLW  14
004F:  MOVWF  22
0050:  CALL   004
....................       tus=6;  
0051:  MOVLW  06
0052:  MOVWF  20
....................       } 
....................    if (input(sutun_3)){  
0053:  BTFSS  06.6
0054:  GOTO   05C
....................       while(input(sutun_3)); 
0055:  BTFSC  06.6
0056:  GOTO   055
....................       delay_ms(20); 
0057:  MOVLW  14
0058:  MOVWF  22
0059:  CALL   004
....................       tus=5;  
005A:  MOVLW  05
005B:  MOVWF  20
....................    } 
....................    if (input(sutun_4)){  
005C:  BTFSS  06.7
005D:  GOTO   065
....................       while(input(sutun_4)); 
005E:  BTFSC  06.7
005F:  GOTO   05E
....................       delay_ms(20); 
0060:  MOVLW  14
0061:  MOVWF  22
0062:  CALL   004
....................       tus=4;  
0063:  MOVLW  04
0064:  MOVWF  20
....................    } 
....................    output_low(satir_2); 
0065:  BCF    06.2
....................  
....................    output_high(satir_3); 
0066:  BSF    06.1
....................    if (input(sutun_1)){ 
0067:  BTFSS  06.4
0068:  GOTO   070
....................       while(input(sutun_1)); 
0069:  BTFSC  06.4
006A:  GOTO   069
....................       delay_ms(20); 
006B:  MOVLW  14
006C:  MOVWF  22
006D:  CALL   004
....................       tus=0x0C; 
006E:  MOVLW  0C
006F:  MOVWF  20
....................       } 
....................    if (input(sutun_2)){ 
0070:  BTFSS  06.5
0071:  GOTO   079
....................       while(input(sutun_2)); 
0072:  BTFSC  06.5
0073:  GOTO   072
....................       delay_ms(20); 
0074:  MOVLW  14
0075:  MOVWF  22
0076:  CALL   004
....................       tus=9;  
0077:  MOVLW  09
0078:  MOVWF  20
....................    } 
....................    if (input(sutun_3)){  
0079:  BTFSS  06.6
007A:  GOTO   082
....................       while(input(sutun_3)); 
007B:  BTFSC  06.6
007C:  GOTO   07B
....................       delay_ms(20); 
007D:  MOVLW  14
007E:  MOVWF  22
007F:  CALL   004
....................       tus=8;  
0080:  MOVLW  08
0081:  MOVWF  20
....................    } 
....................    if (input(sutun_4)){ 
0082:  BTFSS  06.7
0083:  GOTO   08B
....................       while(input(sutun_4)); 
0084:  BTFSC  06.7
0085:  GOTO   084
....................       delay_ms(20); 
0086:  MOVLW  14
0087:  MOVWF  22
0088:  CALL   004
....................       tus=7;  
0089:  MOVLW  07
008A:  MOVWF  20
....................    } 
....................    output_low(satir_3); 
008B:  BCF    06.1
....................  
....................    output_high(satir_4); 
008C:  BSF    06.0
....................    if (input(sutun_1)){ 
008D:  BTFSS  06.4
008E:  GOTO   096
....................       while(input(sutun_1)); 
008F:  BTFSC  06.4
0090:  GOTO   08F
....................       delay_ms(20); 
0091:  MOVLW  14
0092:  MOVWF  22
0093:  CALL   004
....................       tus=0x0D;  
0094:  MOVLW  0D
0095:  MOVWF  20
....................       } 
....................    if (input(sutun_2)){ 
0096:  BTFSS  06.5
0097:  GOTO   09F
....................       while(input(sutun_2)); 
0098:  BTFSC  06.5
0099:  GOTO   098
....................       delay_ms(20); 
009A:  MOVLW  14
009B:  MOVWF  22
009C:  CALL   004
....................       tus=0x0F; 
009D:  MOVLW  0F
009E:  MOVWF  20
....................    } 
....................    if (input(sutun_3)){ 
009F:  BTFSS  06.6
00A0:  GOTO   0A7
....................       while(input(sutun_3)); 
00A1:  BTFSC  06.6
00A2:  GOTO   0A1
....................       delay_ms(20); 
00A3:  MOVLW  14
00A4:  MOVWF  22
00A5:  CALL   004
....................       tus=0;  
00A6:  CLRF   20
....................    } 
....................    if (input(sutun_4)){ 
00A7:  BTFSS  06.7
00A8:  GOTO   0B0
....................       while(input(sutun_4)); 
00A9:  BTFSC  06.7
00AA:  GOTO   0A9
....................       delay_ms(20); 
00AB:  MOVLW  14
00AC:  MOVWF  22
00AD:  CALL   004
....................       tus=0x0E;  
00AE:  MOVLW  0E
00AF:  MOVWF  20
....................    } 
....................    output_low(satir_4); 
00B0:  BCF    06.0
....................     
....................    return tus; 
00B1:  MOVF   20,W
00B2:  MOVWF  78
00B3:  BCF    0A.3
00B4:  BCF    0A.4
00B5:  GOTO   0EF (RETURN)
.................... } 
....................  
....................  
.................... void main(){ 
00B6:  CLRF   20
00B7:  MOVLW  FF
00B8:  MOVWF  21
00B9:  BSF    03.5
00BA:  BSF    1F.0
00BB:  BSF    1F.1
00BC:  BSF    1F.2
00BD:  BCF    1F.3
00BE:  BCF    03.7
00BF:  MOVLW  1F
00C0:  ANDWF  03,F
....................    setup_psp(PSP_DISABLED); 
00C1:  BCF    09.4
....................    setup_spi(SPI_SS_DISABLED); 
00C2:  BCF    03.5
00C3:  BCF    14.5
00C4:  BCF    21.5
00C5:  MOVF   21,W
00C6:  BSF    03.5
00C7:  MOVWF  07
00C8:  BCF    03.5
00C9:  BSF    21.4
00CA:  MOVF   21,W
00CB:  BSF    03.5
00CC:  MOVWF  07
00CD:  BCF    03.5
00CE:  BCF    21.3
00CF:  MOVF   21,W
00D0:  BSF    03.5
00D1:  MOVWF  07
00D2:  MOVLW  01
00D3:  BCF    03.5
00D4:  MOVWF  14
00D5:  MOVLW  00
00D6:  BSF    03.5
00D7:  MOVWF  14
....................    setup_timer_1(T1_DISABLED); 
00D8:  BCF    03.5
00D9:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
00DA:  MOVWF  78
00DB:  MOVWF  12
00DC:  MOVLW  00
00DD:  BSF    03.5
00DE:  MOVWF  12
....................    setup_adc_ports(NO_ANALOGS); 
00DF:  BSF    1F.0
00E0:  BSF    1F.1
00E1:  BSF    1F.2
00E2:  BCF    1F.3
....................    setup_adc(ADC_OFF); 
00E3:  BCF    03.5
00E4:  BCF    1F.0
....................    setup_CCP1(CCP_OFF); 
00E5:  MOVLW  F0
00E6:  ANDWF  17,F
....................    setup_CCP2(CCP_OFF); 
00E7:  ANDWF  1D,F
....................     
....................    set_tris_b(0xF0);    //satýrlar giriþ - sütunlar çýkýþ 
00E8:  BSF    03.5
00E9:  MOVWF  06
....................    set_tris_d(0x00); 
00EA:  MOVLW  00
00EB:  MOVWF  08
....................     
....................    output_d(0x00); 
00EC:  BCF    03.5
00ED:  CLRF   08
....................     
....................    while(1){ 
....................       portd=keypad(); 
00EE:  GOTO   019
00EF:  MOVF   78,W
00F0:  MOVWF  06
00F1:  GOTO   0EE
....................    } 
.................... } 
....................  
00F2:  SLEEP

Configuration Fuses:
   Word  1: 3F39   XT NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
